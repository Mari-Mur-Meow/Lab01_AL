using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using Task_3;

namespace TestProject3
{
    [TestClass]
    public class UnitTestFigure
    {
        [TestMethod]
        public void TestMethodLengthSide()
        {
            Point point1 = new Point(0, 1);
            Point point2 = new Point(0, 2);
            Point point3 = new Point(1, 2);
            Point point4 = new Point(1, 1);
            string name = "Sqrt";
            Figure MyFigure = new Figure(name, point1, point2, point3, point4);
            double MyLenghtSide = MyFigure.LengthSide(point1, point2);
            double dx = point1.X - point2.X;
            double dy = point1.Y - point2.Y;
            double excepted = Math.Sqrt(dx * dx + dy * dy);
            Assert.AreEqual(excepted, MyLenghtSide);

        }

        [TestMethod]
        public void Test1()
        {
            Point[] points;
            points = new Point[4];
            points[0] = new Point(0, 1);
            points[1] = new Point(0, 2);
            points[2] = new Point(1, 2);
            points[3] = new Point(1, 1);
            string name = "Sqrt";
            Figure MyFigure = new Figure(name, points[0], points[1], points[2], points[3]);
            double MyPerimetr = MyFigure.PerimeterCalculator();

            double sum = 0;
            for (int i = 0; i < points.Length; i++)
            {
                double dx = points[i].X - points[(i + 1) % points.Length].X;
                double dy = points[i].Y - points[(i + 1) % points.Length].Y;
                double len = Math.Sqrt(dx * dx + dy * dy);
                sum += len;
            }
            double except = sum;

            Assert.AreEqual(except, MyPerimetr);
        }
    }
}
